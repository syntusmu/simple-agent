version: '3.8'

services:
  # Main application
  maternity-agent:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "5051:5051"
    environment:
      - PORT=5051
      - DEBUG=false
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=maternity_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=maternity_password
    volumes:
      - ../data:/app/data
      - ../uploads:/app/uploads
      - ../config.ini:/app/config.ini:ro
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - maternity-network

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=maternity_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=maternity_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d maternity_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - maternity-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    networks:
      - maternity-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  maternity-network:
    driver: bridge
